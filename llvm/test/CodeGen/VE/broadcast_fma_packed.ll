; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=ve-unknown-unknown -mattr=+packed | FileCheck %s

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <512 x float> @fmadrvv512f32(<512 x float>, float) {
; CHECK-LABEL: fmadrvv512f32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -37360
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB0_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB0_2:
; CHECK-NEXT:    st %s18, 48(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s19, 56(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s20, 64(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s21, 72(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s22, 80(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s23, 88(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s24, 96(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-2048(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v18,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-4096(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v19,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-6144(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v20,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-8192(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v21,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-10240(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v22,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-12288(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v23,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-14336(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v24,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-16384(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v25,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-18432(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v26,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-20480(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v27,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-22528(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v28,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-24576(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v29,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-26624(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v30,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-28672(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v31,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-30720(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v32,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-32768(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v33,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm8,0
; CHECK-NEXT:    st %s16, -32800(,%s9)
; CHECK-NEXT:    svm %s16,%vm8,1
; CHECK-NEXT:    st %s16, -32792(,%s9)
; CHECK-NEXT:    svm %s16,%vm8,2
; CHECK-NEXT:    st %s16, -32784(,%s9)
; CHECK-NEXT:    svm %s16,%vm8,3
; CHECK-NEXT:    st %s16, -32776(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm9,0
; CHECK-NEXT:    st %s16, -32832(,%s9)
; CHECK-NEXT:    svm %s16,%vm9,1
; CHECK-NEXT:    st %s16, -32824(,%s9)
; CHECK-NEXT:    svm %s16,%vm9,2
; CHECK-NEXT:    st %s16, -32816(,%s9)
; CHECK-NEXT:    svm %s16,%vm9,3
; CHECK-NEXT:    st %s16, -32808(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm10,0
; CHECK-NEXT:    st %s16, -32864(,%s9)
; CHECK-NEXT:    svm %s16,%vm10,1
; CHECK-NEXT:    st %s16, -32856(,%s9)
; CHECK-NEXT:    svm %s16,%vm10,2
; CHECK-NEXT:    st %s16, -32848(,%s9)
; CHECK-NEXT:    svm %s16,%vm10,3
; CHECK-NEXT:    st %s16, -32840(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm11,0
; CHECK-NEXT:    st %s16, -32896(,%s9)
; CHECK-NEXT:    svm %s16,%vm11,1
; CHECK-NEXT:    st %s16, -32888(,%s9)
; CHECK-NEXT:    svm %s16,%vm11,2
; CHECK-NEXT:    st %s16, -32880(,%s9)
; CHECK-NEXT:    svm %s16,%vm11,3
; CHECK-NEXT:    st %s16, -32872(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm12,0
; CHECK-NEXT:    st %s16, -32928(,%s9)
; CHECK-NEXT:    svm %s16,%vm12,1
; CHECK-NEXT:    st %s16, -32920(,%s9)
; CHECK-NEXT:    svm %s16,%vm12,2
; CHECK-NEXT:    st %s16, -32912(,%s9)
; CHECK-NEXT:    svm %s16,%vm12,3
; CHECK-NEXT:    st %s16, -32904(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm13,0
; CHECK-NEXT:    st %s16, -32960(,%s9)
; CHECK-NEXT:    svm %s16,%vm13,1
; CHECK-NEXT:    st %s16, -32952(,%s9)
; CHECK-NEXT:    svm %s16,%vm13,2
; CHECK-NEXT:    st %s16, -32944(,%s9)
; CHECK-NEXT:    svm %s16,%vm13,3
; CHECK-NEXT:    st %s16, -32936(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm14,0
; CHECK-NEXT:    st %s16, -32992(,%s9)
; CHECK-NEXT:    svm %s16,%vm14,1
; CHECK-NEXT:    st %s16, -32984(,%s9)
; CHECK-NEXT:    svm %s16,%vm14,2
; CHECK-NEXT:    st %s16, -32976(,%s9)
; CHECK-NEXT:    svm %s16,%vm14,3
; CHECK-NEXT:    st %s16, -32968(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm15,0
; CHECK-NEXT:    st %s16, -33024(,%s9)
; CHECK-NEXT:    svm %s16,%vm15,1
; CHECK-NEXT:    st %s16, -33016(,%s9)
; CHECK-NEXT:    svm %s16,%vm15,2
; CHECK-NEXT:    st %s16, -33008(,%s9)
; CHECK-NEXT:    svm %s16,%vm15,3
; CHECK-NEXT:    st %s16, -33000(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    or %s18, 0, %s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 0, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    lea.sl %s21, -1
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    lea %s0, -1
; CHECK-NEXT:    and %s19, %s0, (32)0
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    lea %s0, fmaf@lo
; CHECK-NEXT:    and %s0, %s0, (32)0
; CHECK-NEXT:    lea.sl %s20, fmaf@hi(%s0)
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 1, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 2, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 3, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 4, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 5, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 6, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 7, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 8, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 9, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 10, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 11, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 12, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 13, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 14, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 15, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 16, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 17, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 18, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 19, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 20, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 21, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 22, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 23, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 24, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 25, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 26, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 27, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 28, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 29, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 30, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 31, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 32, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 33, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 34, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 35, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 36, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 37, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 38, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 39, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 40, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 41, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 42, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 43, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 44, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 45, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 46, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 47, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 48, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 49, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 50, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 51, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 52, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 53, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 54, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 55, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 56, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 57, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 58, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 59, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 60, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 61, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 62, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 63, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 64
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 65
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 66
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 67
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 68
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 69
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 70
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 71
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 72
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 73
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 74
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 75
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 76
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 77
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 78
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 79
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 80
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 81
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 82
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 83
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 84
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 85
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 86
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 87
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 88
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 89
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 90
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 91
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 92
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 93
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 94
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 95
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 96
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 97
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 98
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 99
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 100
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 101
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 102
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 103
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 104
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 105
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 106
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 107
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 108
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 109
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 110
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 111
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 112
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 113
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 114
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 115
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 116
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 117
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 118
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 119
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 120
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 121
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 122
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 123
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 124
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 125
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 126
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 127
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 128
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 129
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 130
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 131
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 132
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 133
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 134
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 135
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 136
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 137
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 138
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 139
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 140
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 141
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 142
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 143
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 144
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 145
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 146
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 147
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 148
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 149
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 150
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 151
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 152
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 153
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 154
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 155
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 156
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 157
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 158
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 159
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 160
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 161
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 162
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 163
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 164
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 165
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 166
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 167
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 168
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 169
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 170
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 171
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 172
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 173
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 174
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 175
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 176
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 177
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 178
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 179
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 180
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 181
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 182
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 183
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 184
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 185
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 186
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 187
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 188
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 189
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 190
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 191
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 192
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 193
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 194
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 195
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 196
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 197
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 198
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 199
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 200
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 201
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 202
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 203
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 204
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 205
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 206
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 207
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 208
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 209
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 210
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 211
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 212
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 213
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 214
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 215
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 216
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 217
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 218
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 219
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 220
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 221
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 222
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 223
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 224
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 225
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 226
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 227
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 228
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 229
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 230
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 231
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 232
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 233
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 234
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 235
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 236
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 237
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 238
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 239
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 240
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 241
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 242
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 243
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 244
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 245
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 246
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 247
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 248
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 249
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 250
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 251
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 252
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 253
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 254
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 255
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s21, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s23,%v0(%s22)
; CHECK-NEXT:    and %s0, %s23, %s19
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s21
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s19, %s0, %s19
; CHECK-NEXT:    srl %s0, %s23, 32
; CHECK-NEXT:    sll %s1, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s0, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s1
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s19
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    # implicit-def: $vm15
; CHECK-NEXT:    ld %s16, -33024(,%s9)
; CHECK-NEXT:    lvm %vm15,0,%s16
; CHECK-NEXT:    ld %s16, -33016(,%s9)
; CHECK-NEXT:    lvm %vm15,1,%s16
; CHECK-NEXT:    ld %s16, -33008(,%s9)
; CHECK-NEXT:    lvm %vm15,2,%s16
; CHECK-NEXT:    ld %s16, -33000(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm15,3,%s16
; CHECK-NEXT:    # implicit-def: $vm14
; CHECK-NEXT:    ld %s16, -32992(,%s9)
; CHECK-NEXT:    lvm %vm14,0,%s16
; CHECK-NEXT:    ld %s16, -32984(,%s9)
; CHECK-NEXT:    lvm %vm14,1,%s16
; CHECK-NEXT:    ld %s16, -32976(,%s9)
; CHECK-NEXT:    lvm %vm14,2,%s16
; CHECK-NEXT:    ld %s16, -32968(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm14,3,%s16
; CHECK-NEXT:    # implicit-def: $vm13
; CHECK-NEXT:    ld %s16, -32960(,%s9)
; CHECK-NEXT:    lvm %vm13,0,%s16
; CHECK-NEXT:    ld %s16, -32952(,%s9)
; CHECK-NEXT:    lvm %vm13,1,%s16
; CHECK-NEXT:    ld %s16, -32944(,%s9)
; CHECK-NEXT:    lvm %vm13,2,%s16
; CHECK-NEXT:    ld %s16, -32936(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm13,3,%s16
; CHECK-NEXT:    # implicit-def: $vm12
; CHECK-NEXT:    ld %s16, -32928(,%s9)
; CHECK-NEXT:    lvm %vm12,0,%s16
; CHECK-NEXT:    ld %s16, -32920(,%s9)
; CHECK-NEXT:    lvm %vm12,1,%s16
; CHECK-NEXT:    ld %s16, -32912(,%s9)
; CHECK-NEXT:    lvm %vm12,2,%s16
; CHECK-NEXT:    ld %s16, -32904(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm12,3,%s16
; CHECK-NEXT:    # implicit-def: $vm11
; CHECK-NEXT:    ld %s16, -32896(,%s9)
; CHECK-NEXT:    lvm %vm11,0,%s16
; CHECK-NEXT:    ld %s16, -32888(,%s9)
; CHECK-NEXT:    lvm %vm11,1,%s16
; CHECK-NEXT:    ld %s16, -32880(,%s9)
; CHECK-NEXT:    lvm %vm11,2,%s16
; CHECK-NEXT:    ld %s16, -32872(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm11,3,%s16
; CHECK-NEXT:    # implicit-def: $vm10
; CHECK-NEXT:    ld %s16, -32864(,%s9)
; CHECK-NEXT:    lvm %vm10,0,%s16
; CHECK-NEXT:    ld %s16, -32856(,%s9)
; CHECK-NEXT:    lvm %vm10,1,%s16
; CHECK-NEXT:    ld %s16, -32848(,%s9)
; CHECK-NEXT:    lvm %vm10,2,%s16
; CHECK-NEXT:    ld %s16, -32840(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm10,3,%s16
; CHECK-NEXT:    # implicit-def: $vm9
; CHECK-NEXT:    ld %s16, -32832(,%s9)
; CHECK-NEXT:    lvm %vm9,0,%s16
; CHECK-NEXT:    ld %s16, -32824(,%s9)
; CHECK-NEXT:    lvm %vm9,1,%s16
; CHECK-NEXT:    ld %s16, -32816(,%s9)
; CHECK-NEXT:    lvm %vm9,2,%s16
; CHECK-NEXT:    ld %s16, -32808(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm9,3,%s16
; CHECK-NEXT:    # implicit-def: $vm8
; CHECK-NEXT:    ld %s16, -32800(,%s9)
; CHECK-NEXT:    lvm %vm8,0,%s16
; CHECK-NEXT:    ld %s16, -32792(,%s9)
; CHECK-NEXT:    lvm %vm8,1,%s16
; CHECK-NEXT:    ld %s16, -32784(,%s9)
; CHECK-NEXT:    lvm %vm8,2,%s16
; CHECK-NEXT:    ld %s16, -32776(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm8,3,%s16
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-32768(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v33,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-30720(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v32,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-28672(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v31,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-26624(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v30,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-24576(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v29,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-22528(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v28,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-20480(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v27,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-18432(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v26,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-16384(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v25,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-14336(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v24,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-12288(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v23,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-10240(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v22,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-8192(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v21,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-6144(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v20,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-4096(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v19,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-2048(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v18,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    ld %s24, 96(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s23, 88(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s22, 80(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s21, 72(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s20, 64(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s19, 56(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s18, 48(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <512 x float> undef, float %1, i32 0
  %vec = shufflevector <512 x float> %vec0, <512 x float> undef, <512 x i32> zeroinitializer
  %ret = fmul fast <512 x float> %vec, %0
  %ret2 = fadd fast <512 x float> %ret, %0
  ret <512 x float> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <512 x float> @fmadrvv512f32s(<512 x float>, float) {
; CHECK-LABEL: fmadrvv512f32s:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -37360
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB1_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB1_2:
; CHECK-NEXT:    st %s18, 48(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s19, 56(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s20, 64(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s21, 72(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s22, 80(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s23, 88(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s24, 96(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-2048(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v18,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-4096(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v19,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-6144(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v20,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-8192(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v21,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-10240(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v22,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-12288(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v23,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-14336(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v24,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-16384(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v25,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-18432(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v26,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-20480(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v27,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-22528(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v28,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-24576(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v29,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-26624(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v30,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-28672(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v31,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-30720(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v32,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-32768(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v33,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm8,0
; CHECK-NEXT:    st %s16, -32800(,%s9)
; CHECK-NEXT:    svm %s16,%vm8,1
; CHECK-NEXT:    st %s16, -32792(,%s9)
; CHECK-NEXT:    svm %s16,%vm8,2
; CHECK-NEXT:    st %s16, -32784(,%s9)
; CHECK-NEXT:    svm %s16,%vm8,3
; CHECK-NEXT:    st %s16, -32776(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm9,0
; CHECK-NEXT:    st %s16, -32832(,%s9)
; CHECK-NEXT:    svm %s16,%vm9,1
; CHECK-NEXT:    st %s16, -32824(,%s9)
; CHECK-NEXT:    svm %s16,%vm9,2
; CHECK-NEXT:    st %s16, -32816(,%s9)
; CHECK-NEXT:    svm %s16,%vm9,3
; CHECK-NEXT:    st %s16, -32808(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm10,0
; CHECK-NEXT:    st %s16, -32864(,%s9)
; CHECK-NEXT:    svm %s16,%vm10,1
; CHECK-NEXT:    st %s16, -32856(,%s9)
; CHECK-NEXT:    svm %s16,%vm10,2
; CHECK-NEXT:    st %s16, -32848(,%s9)
; CHECK-NEXT:    svm %s16,%vm10,3
; CHECK-NEXT:    st %s16, -32840(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm11,0
; CHECK-NEXT:    st %s16, -32896(,%s9)
; CHECK-NEXT:    svm %s16,%vm11,1
; CHECK-NEXT:    st %s16, -32888(,%s9)
; CHECK-NEXT:    svm %s16,%vm11,2
; CHECK-NEXT:    st %s16, -32880(,%s9)
; CHECK-NEXT:    svm %s16,%vm11,3
; CHECK-NEXT:    st %s16, -32872(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm12,0
; CHECK-NEXT:    st %s16, -32928(,%s9)
; CHECK-NEXT:    svm %s16,%vm12,1
; CHECK-NEXT:    st %s16, -32920(,%s9)
; CHECK-NEXT:    svm %s16,%vm12,2
; CHECK-NEXT:    st %s16, -32912(,%s9)
; CHECK-NEXT:    svm %s16,%vm12,3
; CHECK-NEXT:    st %s16, -32904(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm13,0
; CHECK-NEXT:    st %s16, -32960(,%s9)
; CHECK-NEXT:    svm %s16,%vm13,1
; CHECK-NEXT:    st %s16, -32952(,%s9)
; CHECK-NEXT:    svm %s16,%vm13,2
; CHECK-NEXT:    st %s16, -32944(,%s9)
; CHECK-NEXT:    svm %s16,%vm13,3
; CHECK-NEXT:    st %s16, -32936(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm14,0
; CHECK-NEXT:    st %s16, -32992(,%s9)
; CHECK-NEXT:    svm %s16,%vm14,1
; CHECK-NEXT:    st %s16, -32984(,%s9)
; CHECK-NEXT:    svm %s16,%vm14,2
; CHECK-NEXT:    st %s16, -32976(,%s9)
; CHECK-NEXT:    svm %s16,%vm14,3
; CHECK-NEXT:    st %s16, -32968(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm15,0
; CHECK-NEXT:    st %s16, -33024(,%s9)
; CHECK-NEXT:    svm %s16,%vm15,1
; CHECK-NEXT:    st %s16, -33016(,%s9)
; CHECK-NEXT:    svm %s16,%vm15,2
; CHECK-NEXT:    st %s16, -33008(,%s9)
; CHECK-NEXT:    svm %s16,%vm15,3
; CHECK-NEXT:    st %s16, -33000(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    or %s18, 0, %s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 0, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    lea.sl %s21, -1
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    lea %s0, -1
; CHECK-NEXT:    and %s19, %s0, (32)0
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    lea %s1, fmaf@lo
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    lea.sl %s20, fmaf@hi(%s1)
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 1, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 2, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 3, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 4, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 5, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 6, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 7, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 8, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 9, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 10, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 11, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 12, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 13, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 14, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 15, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 16, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 17, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 18, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 19, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 20, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 21, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 22, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 23, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 24, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 25, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 26, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 27, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 28, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 29, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 30, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 31, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 32, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 33, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 34, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 35, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 36, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 37, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 38, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 39, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 40, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 41, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 42, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 43, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 44, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 45, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 46, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 47, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 48, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 49, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 50, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 51, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 52, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 53, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 54, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 55, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 56, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 57, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 58, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 59, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 60, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 61, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 62, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 63, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 64
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 65
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 66
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 67
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 68
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 69
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 70
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 71
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 72
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 73
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 74
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 75
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 76
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 77
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 78
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 79
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 80
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 81
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 82
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 83
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 84
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 85
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 86
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 87
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 88
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 89
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 90
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 91
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 92
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 93
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 94
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 95
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 96
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 97
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 98
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 99
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 100
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 101
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 102
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 103
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 104
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 105
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 106
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 107
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 108
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 109
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 110
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 111
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 112
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 113
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 114
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 115
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 116
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 117
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 118
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 119
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 120
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 121
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 122
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 123
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 124
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 125
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 126
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 127
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 128
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 129
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 130
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 131
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 132
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 133
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 134
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 135
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 136
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 137
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 138
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 139
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 140
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 141
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 142
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 143
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 144
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 145
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 146
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 147
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 148
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 149
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 150
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 151
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 152
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 153
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 154
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 155
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 156
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 157
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 158
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 159
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 160
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 161
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 162
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 163
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 164
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 165
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 166
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 167
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 168
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 169
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 170
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 171
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 172
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 173
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 174
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 175
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 176
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 177
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 178
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 179
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 180
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 181
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 182
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 183
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 184
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 185
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 186
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 187
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 188
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 189
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 190
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 191
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 192
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 193
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 194
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 195
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 196
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 197
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 198
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 199
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 200
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 201
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 202
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 203
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 204
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 205
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 206
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 207
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 208
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 209
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 210
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 211
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 212
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 213
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 214
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 215
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 216
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 217
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 218
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 219
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 220
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 221
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 222
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 223
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 224
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 225
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 226
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 227
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 228
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 229
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 230
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 231
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 232
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 233
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 234
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 235
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 236
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 237
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 238
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 239
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 240
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 241
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 242
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 243
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 244
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 245
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 246
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 247
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 248
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 249
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 250
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 251
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 252
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 253
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 254
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 255
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s21, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s23,%v0(%s22)
; CHECK-NEXT:    and %s0, %s23, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s21
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s19, %s0, %s19
; CHECK-NEXT:    srl %s0, %s23, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s18
; CHECK-NEXT:    or %s2, 0, %s0
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s19
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    # implicit-def: $vm15
; CHECK-NEXT:    ld %s16, -33024(,%s9)
; CHECK-NEXT:    lvm %vm15,0,%s16
; CHECK-NEXT:    ld %s16, -33016(,%s9)
; CHECK-NEXT:    lvm %vm15,1,%s16
; CHECK-NEXT:    ld %s16, -33008(,%s9)
; CHECK-NEXT:    lvm %vm15,2,%s16
; CHECK-NEXT:    ld %s16, -33000(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm15,3,%s16
; CHECK-NEXT:    # implicit-def: $vm14
; CHECK-NEXT:    ld %s16, -32992(,%s9)
; CHECK-NEXT:    lvm %vm14,0,%s16
; CHECK-NEXT:    ld %s16, -32984(,%s9)
; CHECK-NEXT:    lvm %vm14,1,%s16
; CHECK-NEXT:    ld %s16, -32976(,%s9)
; CHECK-NEXT:    lvm %vm14,2,%s16
; CHECK-NEXT:    ld %s16, -32968(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm14,3,%s16
; CHECK-NEXT:    # implicit-def: $vm13
; CHECK-NEXT:    ld %s16, -32960(,%s9)
; CHECK-NEXT:    lvm %vm13,0,%s16
; CHECK-NEXT:    ld %s16, -32952(,%s9)
; CHECK-NEXT:    lvm %vm13,1,%s16
; CHECK-NEXT:    ld %s16, -32944(,%s9)
; CHECK-NEXT:    lvm %vm13,2,%s16
; CHECK-NEXT:    ld %s16, -32936(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm13,3,%s16
; CHECK-NEXT:    # implicit-def: $vm12
; CHECK-NEXT:    ld %s16, -32928(,%s9)
; CHECK-NEXT:    lvm %vm12,0,%s16
; CHECK-NEXT:    ld %s16, -32920(,%s9)
; CHECK-NEXT:    lvm %vm12,1,%s16
; CHECK-NEXT:    ld %s16, -32912(,%s9)
; CHECK-NEXT:    lvm %vm12,2,%s16
; CHECK-NEXT:    ld %s16, -32904(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm12,3,%s16
; CHECK-NEXT:    # implicit-def: $vm11
; CHECK-NEXT:    ld %s16, -32896(,%s9)
; CHECK-NEXT:    lvm %vm11,0,%s16
; CHECK-NEXT:    ld %s16, -32888(,%s9)
; CHECK-NEXT:    lvm %vm11,1,%s16
; CHECK-NEXT:    ld %s16, -32880(,%s9)
; CHECK-NEXT:    lvm %vm11,2,%s16
; CHECK-NEXT:    ld %s16, -32872(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm11,3,%s16
; CHECK-NEXT:    # implicit-def: $vm10
; CHECK-NEXT:    ld %s16, -32864(,%s9)
; CHECK-NEXT:    lvm %vm10,0,%s16
; CHECK-NEXT:    ld %s16, -32856(,%s9)
; CHECK-NEXT:    lvm %vm10,1,%s16
; CHECK-NEXT:    ld %s16, -32848(,%s9)
; CHECK-NEXT:    lvm %vm10,2,%s16
; CHECK-NEXT:    ld %s16, -32840(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm10,3,%s16
; CHECK-NEXT:    # implicit-def: $vm9
; CHECK-NEXT:    ld %s16, -32832(,%s9)
; CHECK-NEXT:    lvm %vm9,0,%s16
; CHECK-NEXT:    ld %s16, -32824(,%s9)
; CHECK-NEXT:    lvm %vm9,1,%s16
; CHECK-NEXT:    ld %s16, -32816(,%s9)
; CHECK-NEXT:    lvm %vm9,2,%s16
; CHECK-NEXT:    ld %s16, -32808(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm9,3,%s16
; CHECK-NEXT:    # implicit-def: $vm8
; CHECK-NEXT:    ld %s16, -32800(,%s9)
; CHECK-NEXT:    lvm %vm8,0,%s16
; CHECK-NEXT:    ld %s16, -32792(,%s9)
; CHECK-NEXT:    lvm %vm8,1,%s16
; CHECK-NEXT:    ld %s16, -32784(,%s9)
; CHECK-NEXT:    lvm %vm8,2,%s16
; CHECK-NEXT:    ld %s16, -32776(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm8,3,%s16
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-32768(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v33,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-30720(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v32,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-28672(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v31,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-26624(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v30,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-24576(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v29,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-22528(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v28,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-20480(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v27,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-18432(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v26,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-16384(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v25,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-14336(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v24,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-12288(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v23,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-10240(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v22,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-8192(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v21,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-6144(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v20,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-4096(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v19,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-2048(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v18,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    ld %s24, 96(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s23, 88(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s22, 80(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s21, 72(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s20, 64(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s19, 56(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s18, 48(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <512 x float> undef, float %1, i32 0
  %vec = shufflevector <512 x float> %vec0, <512 x float> undef, <512 x i32> zeroinitializer
  %ret = fmul fast <512 x float> %0, %vec
  %ret2 = fadd fast <512 x float> %ret, %0
  ret <512 x float> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <512 x float> @fmadrvv512f32s2(<512 x float>, float) {
; CHECK-LABEL: fmadrvv512f32s2:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -37360
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB2_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB2_2:
; CHECK-NEXT:    st %s18, 48(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s19, 56(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s20, 64(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s21, 72(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s22, 80(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s23, 88(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    st %s24, 96(,%s9) # 8-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-2048(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v18,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-4096(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v19,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-6144(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v20,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-8192(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v21,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-10240(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v22,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-12288(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v23,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-14336(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v24,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-16384(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v25,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-18432(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v26,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-20480(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v27,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-22528(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v28,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-24576(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v29,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-26624(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v30,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-28672(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v31,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-30720(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v32,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-32768(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vst %v33,8,%s1 # 2048-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm8,0
; CHECK-NEXT:    st %s16, -32800(,%s9)
; CHECK-NEXT:    svm %s16,%vm8,1
; CHECK-NEXT:    st %s16, -32792(,%s9)
; CHECK-NEXT:    svm %s16,%vm8,2
; CHECK-NEXT:    st %s16, -32784(,%s9)
; CHECK-NEXT:    svm %s16,%vm8,3
; CHECK-NEXT:    st %s16, -32776(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm9,0
; CHECK-NEXT:    st %s16, -32832(,%s9)
; CHECK-NEXT:    svm %s16,%vm9,1
; CHECK-NEXT:    st %s16, -32824(,%s9)
; CHECK-NEXT:    svm %s16,%vm9,2
; CHECK-NEXT:    st %s16, -32816(,%s9)
; CHECK-NEXT:    svm %s16,%vm9,3
; CHECK-NEXT:    st %s16, -32808(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm10,0
; CHECK-NEXT:    st %s16, -32864(,%s9)
; CHECK-NEXT:    svm %s16,%vm10,1
; CHECK-NEXT:    st %s16, -32856(,%s9)
; CHECK-NEXT:    svm %s16,%vm10,2
; CHECK-NEXT:    st %s16, -32848(,%s9)
; CHECK-NEXT:    svm %s16,%vm10,3
; CHECK-NEXT:    st %s16, -32840(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm11,0
; CHECK-NEXT:    st %s16, -32896(,%s9)
; CHECK-NEXT:    svm %s16,%vm11,1
; CHECK-NEXT:    st %s16, -32888(,%s9)
; CHECK-NEXT:    svm %s16,%vm11,2
; CHECK-NEXT:    st %s16, -32880(,%s9)
; CHECK-NEXT:    svm %s16,%vm11,3
; CHECK-NEXT:    st %s16, -32872(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm12,0
; CHECK-NEXT:    st %s16, -32928(,%s9)
; CHECK-NEXT:    svm %s16,%vm12,1
; CHECK-NEXT:    st %s16, -32920(,%s9)
; CHECK-NEXT:    svm %s16,%vm12,2
; CHECK-NEXT:    st %s16, -32912(,%s9)
; CHECK-NEXT:    svm %s16,%vm12,3
; CHECK-NEXT:    st %s16, -32904(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm13,0
; CHECK-NEXT:    st %s16, -32960(,%s9)
; CHECK-NEXT:    svm %s16,%vm13,1
; CHECK-NEXT:    st %s16, -32952(,%s9)
; CHECK-NEXT:    svm %s16,%vm13,2
; CHECK-NEXT:    st %s16, -32944(,%s9)
; CHECK-NEXT:    svm %s16,%vm13,3
; CHECK-NEXT:    st %s16, -32936(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm14,0
; CHECK-NEXT:    st %s16, -32992(,%s9)
; CHECK-NEXT:    svm %s16,%vm14,1
; CHECK-NEXT:    st %s16, -32984(,%s9)
; CHECK-NEXT:    svm %s16,%vm14,2
; CHECK-NEXT:    st %s16, -32976(,%s9)
; CHECK-NEXT:    svm %s16,%vm14,3
; CHECK-NEXT:    st %s16, -32968(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    svm %s16,%vm15,0
; CHECK-NEXT:    st %s16, -33024(,%s9)
; CHECK-NEXT:    svm %s16,%vm15,1
; CHECK-NEXT:    st %s16, -33016(,%s9)
; CHECK-NEXT:    svm %s16,%vm15,2
; CHECK-NEXT:    st %s16, -33008(,%s9)
; CHECK-NEXT:    svm %s16,%vm15,3
; CHECK-NEXT:    st %s16, -33000(,%s9) # 32-byte Folded Spill
; CHECK-NEXT:    or %s18, 0, %s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 0, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    lea.sl %s21, -1
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    lea %s0, -1
; CHECK-NEXT:    and %s19, %s0, (32)0
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    lea %s1, fmaf@lo
; CHECK-NEXT:    and %s1, %s1, (32)0
; CHECK-NEXT:    lea.sl %s20, fmaf@hi(%s1)
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 1, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 2, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 3, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 4, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 5, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 6, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 7, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 8, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 9, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 10, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 11, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 12, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 13, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 14, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 15, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 16, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 17, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 18, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 19, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 20, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 21, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 22, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 23, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 24, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 25, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 26, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 27, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 28, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 29, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 30, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 31, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 32, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 33, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 34, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 35, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 36, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 37, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 38, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 39, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 40, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 41, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 42, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 43, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 44, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 45, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 46, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 47, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 48, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 49, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 50, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 51, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 52, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 53, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 54, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 55, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 56, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 57, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 58, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 59, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 60, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 61, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 62, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    or %s22, 63, (0)1
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 64
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 65
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 66
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 67
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 68
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 69
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 70
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 71
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 72
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 73
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 74
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 75
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 76
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 77
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 78
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 79
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 80
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 81
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 82
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 83
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 84
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 85
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 86
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 87
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 88
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 89
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 90
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 91
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 92
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 93
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 94
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 95
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 96
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 97
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 98
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 99
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 100
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 101
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 102
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 103
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 104
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 105
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 106
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 107
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 108
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 109
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 110
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 111
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 112
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 113
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 114
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 115
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 116
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 117
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 118
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 119
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 120
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 121
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 122
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 123
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 124
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 125
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 126
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 127
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 128
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 129
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 130
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 131
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 132
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 133
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 134
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 135
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 136
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 137
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 138
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 139
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 140
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 141
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 142
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 143
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 144
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 145
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 146
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 147
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 148
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 149
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 150
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 151
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 152
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 153
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 154
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 155
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 156
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 157
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 158
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 159
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 160
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 161
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 162
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 163
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 164
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 165
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 166
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 167
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 168
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 169
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 170
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 171
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 172
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 173
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 174
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 175
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 176
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 177
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 178
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 179
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 180
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 181
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 182
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 183
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 184
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 185
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 186
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 187
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 188
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 189
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 190
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 191
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 192
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 193
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 194
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 195
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 196
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 197
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 198
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 199
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 200
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 201
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 202
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 203
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 204
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 205
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 206
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 207
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 208
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 209
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 210
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 211
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 212
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 213
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 214
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 215
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 216
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 217
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 218
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 219
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 220
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 221
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 222
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 223
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 224
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 225
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 226
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 227
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 228
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 229
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 230
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 231
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 232
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 233
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 234
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 235
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 236
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 237
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 238
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 239
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 240
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 241
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 242
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 243
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 244
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 245
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 246
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 247
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 248
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 249
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 250
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 251
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 252
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 253
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 254
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s24,%v0(%s22)
; CHECK-NEXT:    and %s0, %s24, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s23, %s0, %s19
; CHECK-NEXT:    srl %s0, %s24, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s23
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lea %s22, 255
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s21, %s0, %s21
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-37120(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v0,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lvs %s23,%v0(%s22)
; CHECK-NEXT:    and %s0, %s23, %s19
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s21
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-35072(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vst %v0,8,%s0 # 2048-byte Folded Spill
; CHECK-NEXT:    lvs %s0,%v0(%s22)
; CHECK-NEXT:    and %s19, %s0, %s19
; CHECK-NEXT:    srl %s0, %s23, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s12, 0, %s20
; CHECK-NEXT:    or %s1, 0, %s0
; CHECK-NEXT:    or %s2, 0, %s18
; CHECK-NEXT:    bsic %lr, (,%s12)
; CHECK-NEXT:    # kill: def $sf0 killed $sf0 def $sx0
; CHECK-NEXT:    sra.l %s0, %s0, 32
; CHECK-NEXT:    sll %s0, %s0, 32
; CHECK-NEXT:    or %s0, %s0, %s19
; CHECK-NEXT:    lea %s2, 256
; CHECK-NEXT:    lea %s1,-35072(,%s9)
; CHECK-NEXT:    lvl %s2
; CHECK-NEXT:    vld %v0,8,%s1 # 2048-byte Folded Reload
; CHECK-NEXT:    lsv %v0(%s22),%s0
; CHECK-NEXT:    # implicit-def: $vm15
; CHECK-NEXT:    ld %s16, -33024(,%s9)
; CHECK-NEXT:    lvm %vm15,0,%s16
; CHECK-NEXT:    ld %s16, -33016(,%s9)
; CHECK-NEXT:    lvm %vm15,1,%s16
; CHECK-NEXT:    ld %s16, -33008(,%s9)
; CHECK-NEXT:    lvm %vm15,2,%s16
; CHECK-NEXT:    ld %s16, -33000(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm15,3,%s16
; CHECK-NEXT:    # implicit-def: $vm14
; CHECK-NEXT:    ld %s16, -32992(,%s9)
; CHECK-NEXT:    lvm %vm14,0,%s16
; CHECK-NEXT:    ld %s16, -32984(,%s9)
; CHECK-NEXT:    lvm %vm14,1,%s16
; CHECK-NEXT:    ld %s16, -32976(,%s9)
; CHECK-NEXT:    lvm %vm14,2,%s16
; CHECK-NEXT:    ld %s16, -32968(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm14,3,%s16
; CHECK-NEXT:    # implicit-def: $vm13
; CHECK-NEXT:    ld %s16, -32960(,%s9)
; CHECK-NEXT:    lvm %vm13,0,%s16
; CHECK-NEXT:    ld %s16, -32952(,%s9)
; CHECK-NEXT:    lvm %vm13,1,%s16
; CHECK-NEXT:    ld %s16, -32944(,%s9)
; CHECK-NEXT:    lvm %vm13,2,%s16
; CHECK-NEXT:    ld %s16, -32936(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm13,3,%s16
; CHECK-NEXT:    # implicit-def: $vm12
; CHECK-NEXT:    ld %s16, -32928(,%s9)
; CHECK-NEXT:    lvm %vm12,0,%s16
; CHECK-NEXT:    ld %s16, -32920(,%s9)
; CHECK-NEXT:    lvm %vm12,1,%s16
; CHECK-NEXT:    ld %s16, -32912(,%s9)
; CHECK-NEXT:    lvm %vm12,2,%s16
; CHECK-NEXT:    ld %s16, -32904(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm12,3,%s16
; CHECK-NEXT:    # implicit-def: $vm11
; CHECK-NEXT:    ld %s16, -32896(,%s9)
; CHECK-NEXT:    lvm %vm11,0,%s16
; CHECK-NEXT:    ld %s16, -32888(,%s9)
; CHECK-NEXT:    lvm %vm11,1,%s16
; CHECK-NEXT:    ld %s16, -32880(,%s9)
; CHECK-NEXT:    lvm %vm11,2,%s16
; CHECK-NEXT:    ld %s16, -32872(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm11,3,%s16
; CHECK-NEXT:    # implicit-def: $vm10
; CHECK-NEXT:    ld %s16, -32864(,%s9)
; CHECK-NEXT:    lvm %vm10,0,%s16
; CHECK-NEXT:    ld %s16, -32856(,%s9)
; CHECK-NEXT:    lvm %vm10,1,%s16
; CHECK-NEXT:    ld %s16, -32848(,%s9)
; CHECK-NEXT:    lvm %vm10,2,%s16
; CHECK-NEXT:    ld %s16, -32840(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm10,3,%s16
; CHECK-NEXT:    # implicit-def: $vm9
; CHECK-NEXT:    ld %s16, -32832(,%s9)
; CHECK-NEXT:    lvm %vm9,0,%s16
; CHECK-NEXT:    ld %s16, -32824(,%s9)
; CHECK-NEXT:    lvm %vm9,1,%s16
; CHECK-NEXT:    ld %s16, -32816(,%s9)
; CHECK-NEXT:    lvm %vm9,2,%s16
; CHECK-NEXT:    ld %s16, -32808(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm9,3,%s16
; CHECK-NEXT:    # implicit-def: $vm8
; CHECK-NEXT:    ld %s16, -32800(,%s9)
; CHECK-NEXT:    lvm %vm8,0,%s16
; CHECK-NEXT:    ld %s16, -32792(,%s9)
; CHECK-NEXT:    lvm %vm8,1,%s16
; CHECK-NEXT:    ld %s16, -32784(,%s9)
; CHECK-NEXT:    lvm %vm8,2,%s16
; CHECK-NEXT:    ld %s16, -32776(,%s9) # 32-byte Folded Reload
; CHECK-NEXT:    lvm %vm8,3,%s16
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-32768(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v33,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-30720(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v32,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-28672(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v31,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-26624(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v30,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-24576(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v29,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-22528(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v28,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-20480(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v27,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-18432(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v26,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-16384(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v25,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-14336(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v24,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-12288(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v23,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-10240(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v22,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-8192(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v21,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-6144(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v20,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-4096(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v19,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lea %s0,-2048(,%s9)
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vld %v18,8,%s0 # 2048-byte Folded Reload
; CHECK-NEXT:    ld %s24, 96(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s23, 88(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s22, 80(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s21, 72(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s20, 64(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s19, 56(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    ld %s18, 48(,%s9) # 8-byte Folded Reload
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <512 x float> undef, float %1, i32 0
  %vec = shufflevector <512 x float> %vec0, <512 x float> undef, <512 x i32> zeroinitializer
  %ret = fmul fast <512 x float> %0, %0
  %ret2 = fadd fast <512 x float> %ret, %vec
  ret <512 x float> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <256 x double> @fmadrvv256f64(<256 x double>, double) {
; CHECK-LABEL: fmadrvv256f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB3_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB3_2:
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.d %v0,%v0,%s0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <256 x double> undef, double %1, i32 0
  %vec = shufflevector <256 x double> %vec0, <256 x double> undef, <256 x i32> zeroinitializer
  %ret = fmul fast <256 x double> %vec, %0
  %ret2 = fadd fast <256 x double> %ret, %0
  ret <256 x double> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <256 x double> @fmadrvv256f64s(<256 x double>, double) {
; CHECK-LABEL: fmadrvv256f64s:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB4_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB4_2:
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.d %v0,%v0,%s0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <256 x double> undef, double %1, i32 0
  %vec = shufflevector <256 x double> %vec0, <256 x double> undef, <256 x i32> zeroinitializer
  %ret = fmul fast <256 x double> %0, %vec
  %ret2 = fadd fast <256 x double> %ret, %0
  ret <256 x double> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <256 x double> @fmadrvv256f64s2(<256 x double>, double) {
; CHECK-LABEL: fmadrvv256f64s2:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB5_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB5_2:
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.d %v0,%s0,%v0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <256 x double> undef, double %1, i32 0
  %vec = shufflevector <256 x double> %vec0, <256 x double> undef, <256 x i32> zeroinitializer
  %ret = fmul fast <256 x double> %0, %0
  %ret2 = fadd fast <256 x double> %ret, %vec
  ret <256 x double> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <256 x float> @fmadrvv256f32(<256 x float>, float) {
; CHECK-LABEL: fmadrvv256f32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB6_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB6_2:
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.s %v0,%v0,%s0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <256 x float> undef, float %1, i32 0
  %vec = shufflevector <256 x float> %vec0, <256 x float> undef, <256 x i32> zeroinitializer
  %ret = fmul fast <256 x float> %vec, %0
  %ret2 = fadd fast <256 x float> %ret, %0
  ret <256 x float> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <256 x float> @fmadrvv256f32s(<256 x float>, float) {
; CHECK-LABEL: fmadrvv256f32s:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB7_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB7_2:
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.s %v0,%v0,%s0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <256 x float> undef, float %1, i32 0
  %vec = shufflevector <256 x float> %vec0, <256 x float> undef, <256 x i32> zeroinitializer
  %ret = fmul fast <256 x float> %0, %vec
  %ret2 = fadd fast <256 x float> %ret, %0
  ret <256 x float> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <256 x float> @fmadrvv256f32s2(<256 x float>, float) {
; CHECK-LABEL: fmadrvv256f32s2:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB8_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB8_2:
; CHECK-NEXT:    lea %s1, 256
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.s %v0,%s0,%v0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <256 x float> undef, float %1, i32 0
  %vec = shufflevector <256 x float> %vec0, <256 x float> undef, <256 x i32> zeroinitializer
  %ret = fmul fast <256 x float> %0, %0
  %ret2 = fadd fast <256 x float> %ret, %vec
  ret <256 x float> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <128 x double> @fmadrvv128f64(<128 x double>, double) {
; CHECK-LABEL: fmadrvv128f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB9_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB9_2:
; CHECK-NEXT:    lea %s1, 128
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.d %v0,%v0,%s0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <128 x double> undef, double %1, i32 0
  %vec = shufflevector <128 x double> %vec0, <128 x double> undef, <128 x i32> zeroinitializer
  %ret = fmul fast <128 x double> %vec, %0
  %ret2 = fadd fast <128 x double> %ret, %0
  ret <128 x double> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <64 x double> @fmadrvv64f64(<64 x double>, double) {
; CHECK-LABEL: fmadrvv64f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB10_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB10_2:
; CHECK-NEXT:    lea %s1, 64
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.d %v0,%v0,%s0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <64 x double> undef, double %1, i32 0
  %vec = shufflevector <64 x double> %vec0, <64 x double> undef, <64 x i32> zeroinitializer
  %ret = fmul fast <64 x double> %vec, %0
  %ret2 = fadd fast <64 x double> %ret, %0
  ret <64 x double> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <32 x double> @fmadrvv32f64(<32 x double>, double) {
; CHECK-LABEL: fmadrvv32f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB11_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB11_2:
; CHECK-NEXT:    or %s1, 32, (0)1
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.d %v0,%v0,%s0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <32 x double> undef, double %1, i32 0
  %vec = shufflevector <32 x double> %vec0, <32 x double> undef, <32 x i32> zeroinitializer
  %ret = fmul fast <32 x double> %vec, %0
  %ret2 = fadd fast <32 x double> %ret, %0
  ret <32 x double> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <16 x double> @fmadrvv16f64(<16 x double>, double) {
; CHECK-LABEL: fmadrvv16f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB12_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB12_2:
; CHECK-NEXT:    or %s1, 16, (0)1
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.d %v0,%v0,%s0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <16 x double> undef, double %1, i32 0
  %vec = shufflevector <16 x double> %vec0, <16 x double> undef, <16 x i32> zeroinitializer
  %ret = fmul fast <16 x double> %vec, %0
  %ret2 = fadd fast <16 x double> %ret, %0
  ret <16 x double> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <8 x double> @fmadrvv8f64(<8 x double>, double) {
; CHECK-LABEL: fmadrvv8f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB13_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB13_2:
; CHECK-NEXT:    or %s1, 8, (0)1
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.d %v0,%v0,%s0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <8 x double> undef, double %1, i32 0
  %vec = shufflevector <8 x double> %vec0, <8 x double> undef, <8 x i32> zeroinitializer
  %ret = fmul fast <8 x double> %vec, %0
  %ret2 = fadd fast <8 x double> %ret, %0
  ret <8 x double> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <4 x double> @fmadrvv4f64(<4 x double>, double) {
; CHECK-LABEL: fmadrvv4f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB14_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB14_2:
; CHECK-NEXT:    or %s1, 4, (0)1
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.d %v0,%v0,%s0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <4 x double> undef, double %1, i32 0
  %vec = shufflevector <4 x double> %vec0, <4 x double> undef, <4 x i32> zeroinitializer
  %ret = fmul fast <4 x double> %vec, %0
  %ret2 = fadd fast <4 x double> %ret, %0
  ret <4 x double> %ret2
}

; Function Attrs: norecurse nounwind readonly
define x86_regcallcc <2 x double> @fmadrvv2f64(<2 x double>, double) {
; CHECK-LABEL: fmadrvv2f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    st %s9, (,%s11)
; CHECK-NEXT:    st %s10, 8(,%s11)
; CHECK-NEXT:    st %s15, 24(,%s11)
; CHECK-NEXT:    st %s16, 32(,%s11)
; CHECK-NEXT:    or %s9, 0, %s11
; CHECK-NEXT:    lea %s13, -176
; CHECK-NEXT:    and %s13, %s13, (32)0
; CHECK-NEXT:    lea.sl %s11, -1(%s11, %s13)
; CHECK-NEXT:    brge.l %s11, %s8, .LBB15_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    ld %s61, 24(,%s14)
; CHECK-NEXT:    or %s62, 0, %s0
; CHECK-NEXT:    lea %s63, 315
; CHECK-NEXT:    shm.l %s63, (%s61)
; CHECK-NEXT:    shm.l %s8, 8(%s61)
; CHECK-NEXT:    shm.l %s11, 16(%s61)
; CHECK-NEXT:    monc
; CHECK-NEXT:    or %s0, 0, %s62
; CHECK-NEXT:  .LBB15_2:
; CHECK-NEXT:    or %s1, 2, (0)1
; CHECK-NEXT:    lvl %s1
; CHECK-NEXT:    vfmad.d %v0,%v0,%s0,%v0
; CHECK-NEXT:    or %s11, 0, %s9
; CHECK-NEXT:    ld %s16, 32(,%s11)
; CHECK-NEXT:    ld %s15, 24(,%s11)
; CHECK-NEXT:    ld %s10, 8(,%s11)
; CHECK-NEXT:    ld %s9, (,%s11)
; CHECK-NEXT:    b.l (,%lr)
  %vec0 = insertelement <2 x double> undef, double %1, i32 0
  %vec = shufflevector <2 x double> %vec0, <2 x double> undef, <2 x i32> zeroinitializer
  %ret = fmul fast <2 x double> %vec, %0
  %ret2 = fadd fast <2 x double> %ret, %0
  ret <2 x double> %ret2
}

